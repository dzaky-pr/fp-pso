name: üöÄ CD Pipeline

on:
  workflow_dispatch:
  push:
    branches:
      - dev-tito-rill-banget

jobs:
  deploy:
    name: üöÄ Deploy & Canary Release
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://your-prod-app-url.com

    steps:
      # ‚¨áÔ∏è Checkout repo
      - name: ‚¨áÔ∏è Checkout Code
        uses: actions/checkout@v4

      # ‚¨áÔ∏è Download latest artifact from S3
      - name: ‚òÅÔ∏è Download Latest Artifact from S3
        uses: jakejarvis/s3-sync-action@v0.5.1
        with:
          args: --exact-timestamps
        env:
          AWS_S3_BUCKET: book-library-ci-artifact
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_CD }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_CD }}
          AWS_REGION: ap-southeast-1
          SOURCE_DIR: "./"
          DEST_DIR: latest_artifact/

      # üö© Deploy to Staging EC2
      - name: üñ•Ô∏è Deploy to Staging EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.STAGING_EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "latest_artifact/*"
          target: "/var/www/app/staging"

      # üî• Run Smoke Test on Staging
      - name: üî• Smoke Test on Staging
        run: |
          # example curl test, replace with your own Playwright or curl scripts
          curl --fail https://staging.your-app.com/health || exit 1
      
      #######################################################################
      # === ‚¨áÔ∏è  CANARY 10 %  ===============================================
      #######################################################################

      # üéØ Canary Deploy 10% Traffic (example for ALB or custom routing)
      - name: ü¶∫ Shift 10% Traffic to Canary
        run: |
          aws elbv2 modify-rule \
            --rule-arn  ${{ secrets.ALB_RULE_ARN }} \
            --actions "Type=forward,TargetGroupArn=${{ secrets.TG_NEW_ARN }},Weight=10" \
                      "Type=forward,TargetGroupArn=${{ secrets.TG_OLD_ARN }},Weight=90"

      # ‚è≥ Wait and Health Check Canary
      - name: ‚è≥ Wait & Health Check Canary
        run: |
          sleep 60  # wait 1 minute for canary to stabilize
          curl --fail https://canary.your-app.com/health || exit 1
      
      #######################################################################
      # === ‚¨áÔ∏è  FULL-SWITCH 100 %  =========================================
      #######################################################################

      # ‚úÖ Deploy 100% Traffic to Prod if Canary OK
      - name: ‚úÖ Deploy 100% to Production
        if: success()
        run: |
          aws elbv2 modify-rule \
            --rule-arn  ${{ secrets.ALB_RULE_ARN }} \
            --actions "Type=forward,TargetGroupArn=${{ secrets.TG_NEW_ARN }},Weight=100" \
                      "Type=forward,TargetGroupArn=${{ secrets.TG_OLD_ARN }},Weight=0"

      # üî• Post-Deploy Smoke Test
      - name: üî• Post-Deploy Smoke Test
        if: success()
        run: |
          curl --fail https://your-app.com/health || exit 1

      #######################################################################
      # === ‚¨á  ROLLBACK  ===================================================
      #######################################################################

      # ‚ö† Rollback if any health check fails
      - name: ‚ö† Rollback on Failure
        if: failure()
        run: |
          echo "üî¥ Rollback triggered: shifting all traffic back to stable version"
          aws elbv2 modify-rule \
            --rule-arn  ${{ secrets.ALB_RULE_ARN }} \
            --actions "Type=forward,TargetGroupArn=${{ secrets.TG_NEW_ARN }},Weight=0" \
                      "Type=forward,TargetGroupArn=${{ secrets.TG_OLD_ARN¬†}},Weight=100"